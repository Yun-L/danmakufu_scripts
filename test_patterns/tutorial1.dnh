#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["First Script"]
#Text["Author: Yun[r]for testing"]
#Image["./minecraft.png"]

#include "script/default_system/Default_ShotConst.txt"

let objBoss;

@Event {
    alternative(GetEventType())
    case(EV_REQUEST_LIFE) {
        SetScriptResult(500);
    }
    case(EV_REQUEST_TIMER) {
        SetScriptResult(60);
    }
    case(EV_REQUEST_SPELL_SCORE) {
        SetScriptResult(1000000)
    }
}

@Initialize {
    objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
    ObjEnemy_Regist(objBoss);

    let imgExRumia = GetCurrentScriptDirectory() ~ "ExRumia.png";
    ObjPrim_SetTexture(objBoss, imgExRumia);
    ObjSprite2D_SetSourceRect(objBoss, 64, 1, 127, 64);
    ObjSprite2D_SetDestCenter(objBoss);

    ObjMove_SetDestAtFrame(objBoss, GetCenterX(), 60, 60);

    TFinalize;
    MainTask;
    side;
    bar;

}

@MainLoop {
    ObjEnemy_SetIntersectionCircleToShot(   objBoss,
                                            ObjMove_GetX(objBoss),
                                            ObjMove_GetY(objBoss),
                                            32);

	ObjEnemy_SetIntersectionCircleToPlayer( objBoss, 
                                            ObjMove_GetX(objBoss), 
                                            ObjMove_GetY(objBoss), 
                                            24);

    yield;
}

function GetCenterX() {
    return GetStgFrameWidth() / 2;
}
function GetCenterY() {
    return GetStgFrameHeight() / 2;
}

function wait(n) {
    loop(n){yield;}
}

task TFinalize {
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){yield;}
    Obj_Delete(objBoss);
    DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
    SetAutoDeleteObject(true);
    CloseScript(GetOwnScriptID());
    return;
}

task MainTask {
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 400) {

        CreateShotA1(   ObjMove_GetX(objBoss),
                        ObjMove_GetY(objBoss),
                        2,
                        90,
                        DS_BALL_S_RED,
                        5);

        wait(2);

        ascent(i in 1..6) {

            CreateShotA1(   ObjMove_GetX(objBoss) + i * 10,
                            ObjMove_GetY(objBoss),
                            2,
                            90,
                            DS_BALL_S_RED,
                            5);

            CreateShotA1(   ObjMove_GetX(objBoss) + i * -10,
                            ObjMove_GetY(objBoss),
                            2,
                            90,
                            DS_BALL_S_RED,
                            5);
            
            wait(2);
        }

        wait(60 * 4);
    }
}

task side {
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 200) {

        ascent(i in 0..72) {
            
            let angle = i * 5;

            CreateShotA1(   ObjMove_GetX(objBoss), 
                            ObjMove_GetY(objBoss), 
                            2, 
                            angle, 
                            DS_BALL_S_RED, 
                            5);

            if (i % 2 == 0) {
                wait(1);
            }
            
        
        }

    }
}

task bar {
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) {
        
        let to_player = GetAngleToPlayer(objBoss);
        let bar_angle = (to_player + 90) % 360;
        let spread = 20;

        let x = cos(bar_angle) * spread;
        let y = sin(bar_angle) * spread;

        ascent(i in -5..6) {

            CreateShotA1(   ObjMove_GetX(objBoss) + x * i,
                            ObjMove_GetY(objBoss) + y * i,
                            10,
                            to_player,
                            DS_BALL_S_BLUE,
                            5);

        }

        wait(60 * 5);

    }
}